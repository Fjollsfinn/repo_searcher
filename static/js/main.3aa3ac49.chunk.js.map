{"version":3,"sources":["components/TextInput.jsx","components/TableCell.jsx","components/SelectInput.jsx","components/TablePagination.jsx","components/DataTable.jsx","components/Popup.jsx","components/Overlay.jsx","components/Panel.jsx","components/Header.jsx","App.jsx","serviceWorker.js","index.js"],"names":["styles","input","borderRadius","height","width","paddingLeft","border","backgroundColor","cyan","color","&::placeholder","TextInput","_ref","classes","value","onChangeInput","react_default","a","createElement","type","className","placeholder","name","onChange","defaultProps","injectSheet","StyledTableCell","children","TableCell_default","tableCell","fontSize","@media (max-width: 1024px)","@media (max-width: 640px)","SelectInput","onChangeRowsPerPage","rowsPerPage","options","selectProps","Object","objectWithoutProperties","assign","map","option","key","concat","TablePagination","handleFirstPageButtonClick","event","onChangePage","_this","props","handleBackButtonClick","_this$props","page","handleNextButtonClick","_this$props2","handleLastPageButtonClick","_this$props3","count","Math","max","ceil","_this$props4","this","Grid_default","container","style","alignItems","justifyContent","item","Typography_default","variant","components_SelectInput","IconButton_default","iconButton","onClick","disabled","aria-label","FirstPage_default","KeyboardArrowLeft_default","KeyboardArrowRight_default","LastPage_default","Component","paddingRight","sortArrow","zIndex","activeRow","cursor","&:hover","loaderWrapper","marginTop","noDataInfoWrapper","padding","white","noItemsIcon","columnHeaders","title","id","DataTable","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","handleChangePage","bind","assertThisInitialized","handleChangeRowsPerPage","setState","target","_this$state","triggerPopup","handleSort","isLoading","sort","data","currentSortingParam","tableData","slice","index","TableRow_default","data-index","components_TableCell","owner","login","stargazers_count","created_at","direction","Table_default","TableHead_default","header","ArrowUpward_default","clsx","defineProperty","ArrowDownward_default","CircularProgress_default","TableBody_default","length","Pageview_default","index_es","components_TablePagination","popup","position","top","left","transform","flexDirection","boxShadow","popupDescription","close","transition","button","fontWeight","borderBottom","display","textDecoration","outline","marginBottom","backfaceVisibility","&:active","buttonText","Popup","_ref2","description","htmlUrl","html_url","justify","Clear_default","href","rel","Overlay","role","overlay","initialSorting","Panel","searchInput","fetchedData","objectSpread","isPopupOpen","selectedItem","handleChangeInput","fetchData","debounce","cachedQuery","JSON","parse","localStorage","getItem","cachedData","topic","_this2","fetch","then","blob","json","items","setItem","stringify","catch","error","console","e","_this$setState","persist","_e$target","sortingParam","parentNode","order","getSortingDecision","firstItem","secondItem","sortedData","prevItem","nextItem","prev","next","Date","clickedItemIndex","dataset","prevState","_this$state2","components_TextInput","components_DataTable","components_Popup","components_Overlay","Header","link","paddingTop","paddingBottom","textAlign","@global","*:root","margin","boxSizing","body","components_Header","components_Panel","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3aa3ac49.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport injectSheet from 'react-jss';\nimport cyan from '@material-ui/core/colors/cyan';\n\nconst styles = {\n  input: {\n    borderRadius: '.5rem',\n    height: '3rem',\n    width: '25rem',\n    paddingLeft: '1rem',\n    border: '.3rem white solid',\n    backgroundColor: cyan[900],\n    color: '#fff',\n    '&::placeholder': {\n      color: '#fff',\n    },\n  },\n};\n\nfunction TextInput({ classes, value, onChangeInput }) {\n  return (\n    <input\n      type=\"text\"\n      className={classes.input}\n      placeholder=\"Enter repository name . . .\"\n      name=\"searchInput\"\n      value={value}\n      onChange={onChangeInput}\n    />\n  );\n}\n\nTextInput.propTypes = {\n  classes: PropTypes.objectOf(PropTypes.string).isRequired,\n  onChangeInput: PropTypes.func.isRequired,\n  value: PropTypes.string,\n};\n\nTextInput.defaultProps = {\n  value: '',\n};\n\nexport default injectSheet(styles)(TextInput);\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport injectSheet from 'react-jss';\r\n\r\nconst styles = {\r\n  tableCell: {\r\n    color: 'white',\r\n    fontSize: '1.6rem',\r\n    width: '13rem',\r\n  },\r\n  '@media (max-width: 1024px)': {\r\n    tableCell: {\r\n      width: '7rem',\r\n    },\r\n  },\r\n  '@media (max-width: 640px)': {\r\n    tableCell: {\r\n      width: '5rem',\r\n    },\r\n  },\r\n};\r\n\r\nconst StyledTableCell = ({ classes, children }) => (\r\n  <TableCell className={classes.tableCell}>{children}</TableCell>\r\n);\r\n\r\nStyledTableCell.propTypes = {\r\n  classes: PropTypes.objectOf(PropTypes.string).isRequired,\r\n  children: PropTypes.node,\r\n};\r\n\r\nStyledTableCell.defaultProps = {\r\n  children: null,\r\n};\r\n\r\nexport default injectSheet(styles)(StyledTableCell);\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction SelectInput({\n  onChangeRowsPerPage, rowsPerPage, options, ...selectProps\n}) {\n  return (\n    <select type=\"select\" onChange={onChangeRowsPerPage} value={rowsPerPage} {...selectProps}>\n      {options && options.map((option) => (\n        <option key={`select-input-option-${option}`} value={option}>{option}</option>\n      ))}\n    </select>\n  );\n}\n\nSelectInput.propTypes = {\n  onChangeRowsPerPage: PropTypes.func.isRequired,\n  rowsPerPage: PropTypes.number,\n  options: PropTypes.arrayOf(PropTypes.number),\n};\n\nSelectInput.defaultProps = {\n  rowsPerPage: 5,\n  options: [5, 10, 15],\n};\n\nexport default SelectInput;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport injectSheet from 'react-jss';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport Typography from '@material-ui/core/Typography';\nimport SelectInput from './SelectInput';\n\nconst styles = {\n  iconButton: {\n    color: '#ffffff',\n  },\n  rowsPerPage: {\n    color: '#ffffff',\n    paddingRight: '1rem',\n  },\n};\n\nclass TablePagination extends Component {\n    handleFirstPageButtonClick = (event) => {\n      const { onChangePage } = this.props;\n      onChangePage(event, 0);\n    };\n\n    handleBackButtonClick = (event) => {\n      const { onChangePage, page } = this.props;\n      onChangePage(event, page - 1);\n    };\n\n    handleNextButtonClick = (event) => {\n      const { onChangePage, page } = this.props;\n\n      onChangePage(event, page + 1);\n    };\n\n    handleLastPageButtonClick = (event) => {\n      const {\n        onChangePage, count, rowsPerPage,\n      } = this.props;\n\n      onChangePage(\n        event,\n        Math.max(0, Math.ceil(count / rowsPerPage) - 1),\n      );\n    };\n\n    render() {\n      const {\n        count, page, rowsPerPage, classes, onChangeRowsPerPage,\n      } = this.props;\n      return (\n        <Grid container style={{ alignItems: 'center', justifyContent: 'flex-end' }}>\n          <Grid item>\n            <Typography className={classes.rowsPerPage} variant=\"h6\">Rows per page:</Typography>\n          </Grid>\n          <Grid item>\n            <SelectInput onChangeRowsPerPage={onChangeRowsPerPage} rowsPerPage={rowsPerPage} />\n          </Grid>\n          <Grid item>\n            <IconButton\n              className={classes.iconButton}\n              onClick={this.handleFirstPageButtonClick}\n              disabled={page === 0}\n              aria-label=\"First Page\"\n            >\n              <FirstPageIcon />\n            </IconButton>\n          </Grid>\n          <Grid item>\n            <IconButton\n              className={classes.iconButton}\n              onClick={this.handleBackButtonClick}\n              disabled={page === 0}\n              aria-label=\"Previous Page\"\n            >\n              <KeyboardArrowLeft />\n            </IconButton>\n          </Grid>\n          <Grid item>\n            <IconButton\n              className={classes.iconButton}\n              onClick={this.handleNextButtonClick}\n              disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n              aria-label=\"Next Page\"\n            >\n              <KeyboardArrowRight />\n            </IconButton>\n          </Grid>\n          <Grid item>\n            <IconButton\n              className={classes.iconButton}\n              onClick={this.handleLastPageButtonClick}\n              disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n              aria-label=\"Last Page\"\n            >\n              <LastPageIcon />\n            </IconButton>\n          </Grid>\n        </Grid>\n      );\n    }\n}\n\nTablePagination.propTypes = {\n  classes: PropTypes.objectOf(PropTypes.string).isRequired,\n  page: PropTypes.number,\n  count: PropTypes.number,\n  rowsPerPage: PropTypes.number,\n  onChangePage: PropTypes.func,\n  onChangeRowsPerPage: PropTypes.func,\n};\n\nTablePagination.defaultProps = {\n  page: 0,\n  count: 30,\n  rowsPerPage: 5,\n  onChangePage: null,\n  onChangeRowsPerPage: null,\n};\n\nexport default injectSheet(styles)(TablePagination);\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport injectSheet from 'react-jss';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { Typography } from '@material-ui/core';\r\nimport PageviewIcon from '@material-ui/icons/Pageview';\r\nimport clsx from 'clsx';\r\nimport cyan from '@material-ui/core/colors/cyan';\r\nimport TableCell from './TableCell';\r\nimport TablePagination from './TablePagination';\r\n\r\nconst styles = {\r\n  sortArrow: {\r\n    color: '#434956',\r\n    zIndex: -1,\r\n  },\r\n  activeRow: {\r\n    cursor: 'pointer',\r\n    '&:hover': {\r\n      backgroundColor: cyan[800],\r\n    },\r\n  },\r\n  loaderWrapper: {\r\n    marginTop: '2rem',\r\n  },\r\n  noDataInfoWrapper: {\r\n    padding: '2rem',\r\n  },\r\n  white: {\r\n    color: '#ffffff',\r\n  },\r\n  noItemsIcon: {\r\n    fontSize: 64,\r\n  },\r\n};\r\n\r\nconst columnHeaders = [\r\n  { title: 'ID', id: 'id' },\r\n  { title: 'Repo Title', id: 'name' },\r\n  { title: 'Owner', id: 'owner' },\r\n  { title: 'Stars', id: 'stargazers_count' },\r\n  { title: 'Created at', id: 'created_at' },\r\n];\r\n\r\nclass DataTable extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      page: 0,\r\n      rowsPerPage: 5,\r\n    };\r\n    this.handleChangePage = this.handleChangePage.bind(this);\r\n    this.handleChangeRowsPerPage = this.handleChangeRowsPerPage.bind(this);\r\n  }\r\n\r\n  handleChangePage(event, page) {\r\n    this.setState({ page });\r\n  }\r\n\r\n  handleChangeRowsPerPage(event) {\r\n    this.setState({ page: 0, rowsPerPage: +event.target.value });\r\n  }\r\n\r\n  render() {\r\n    const { page, rowsPerPage } = this.state;\r\n    const {\r\n      classes, triggerPopup, handleSort, isLoading, sort, data, currentSortingParam,\r\n    } = this.props;\r\n\r\n    const tableData = data.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n      .map((item, index) => (\r\n        <TableRow\r\n          key={`item-${item.id}`}\r\n          className={classes.activeRow}\r\n          data-index={page === 0 ? index : page * rowsPerPage + index}\r\n          onClick={triggerPopup}\r\n        >\r\n          <TableCell>{item.id}</TableCell>\r\n          <TableCell>{item.name}</TableCell>\r\n          <TableCell>{item.owner.login}</TableCell>\r\n          <TableCell>{item.stargazers_count}</TableCell>\r\n          <TableCell>{item.created_at.slice(0, 10)}</TableCell>\r\n        </TableRow>\r\n      ));\r\n\r\n    return (\r\n      <div>\r\n        <Grid container direction=\"column\" alignItems=\"center\">\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                {columnHeaders.map((header) => (\r\n                  <TableCell key={header.id}>\r\n                    {header.title}\r\n                    <IconButton onClick={handleSort} value={header.id}>\r\n                      {sort[header.id] === 'asc'\r\n                        ? (\r\n                          <ArrowUpward className={clsx(classes.sortArrow,\r\n                            { [classes.white]: currentSortingParam === header.id })}\r\n                          />\r\n                        )\r\n                        : (\r\n                          <ArrowDownward className={clsx(classes.sortArrow,\r\n                            { [classes.white]: currentSortingParam === header.id })}\r\n                          />\r\n                        )}\r\n                    </IconButton>\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n          </Table>\r\n          { isLoading\r\n            ? (\r\n              <Grid\r\n                item\r\n                className={classes.loaderWrapper}\r\n              >\r\n                <CircularProgress className={classes.white} />\r\n              </Grid>\r\n            )\r\n            : (\r\n              <Table>\r\n                <TableBody>\r\n                  {data && data.length ? tableData : (\r\n                    <Grid className={classes.noDataInfoWrapper} container direction=\"column\" alignItems=\"center\">\r\n                      <PageviewIcon className={clsx(classes.white, classes.noItemsIcon)} />\r\n                      <Typography className={classes.white} variant=\"h4\">No repository found.</Typography>\r\n                    </Grid>\r\n                  )}\r\n                </TableBody>\r\n              </Table>\r\n            )}\r\n        </Grid>\r\n        <TablePagination\r\n          onChangePage={this.handleChangePage}\r\n          onChangeRowsPerPage={this.handleChangeRowsPerPage}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          count={30}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDataTable.propTypes = {\r\n  classes: PropTypes.objectOf(PropTypes.string).isRequired,\r\n  data: PropTypes.arrayOf(PropTypes.object),\r\n  handleSort: PropTypes.func,\r\n  isLoading: PropTypes.bool,\r\n  sort: PropTypes.shape({}),\r\n  triggerPopup: PropTypes.func,\r\n  currentSortingParam: PropTypes.string,\r\n};\r\n\r\nDataTable.defaultProps = {\r\n  data: null,\r\n  handleSort: null,\r\n  isLoading: null,\r\n  sort: null,\r\n  triggerPopup: null,\r\n  currentSortingParam: '',\r\n};\r\n\r\nexport default injectSheet(styles)(DataTable);\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport injectSheet from 'react-jss';\nimport Grid from '@material-ui/core/Grid';\nimport Clear from '@material-ui/icons/Clear';\nimport Typography from '@material-ui/core/Typography';\nimport cyan from '@material-ui/core/colors/cyan';\n\nconst styles = {\n  popup: {\n    position: 'fixed',\n    top: '50%',\n    left: '50%',\n    transform: 'translateX(-50%) translateY(-50%)',\n    backgroundColor: 'white',\n    width: '40rem',\n    height: 'auto',\n    borderRadius: '.5rem',\n    flexDirection: 'column',\n    zIndex: '2',\n    boxShadow: '0 .5rem 1rem rgba(0, 0, 0, 1)',\n    padding: '1rem',\n  },\n  popupDescription: {\n    padding: '2rem',\n  },\n  close: {\n    cursor: 'pointer',\n    color: '#282c34',\n    transition: 'all .5s',\n    '&:hover': {\n      transform: 'rotateZ(90deg)',\n    },\n  },\n  button: {\n    marginTop: '2rem',\n    color: '#282c34',\n    backgroundColor: 'white',\n    fontWeight: '900',\n    borderBottom: '1px solid #282c34',\n    display: 'inline-block',\n    textDecoration: 'none',\n    padding: '1rem',\n    fontSize: '1.4rem',\n    transition: 'all .2s',\n    outline: 'none !important',\n    border: 'none',\n    marginBottom: '1.5rem',\n    transform: 'translateZ(0) scale(1.0, 1.0)',\n    backfaceVisibility: 'hidden',\n    '&:hover': {\n      backgroundColor: cyan[900],\n      color: 'white',\n      boxShadow: '0 1rem 2rem rgba(0, 0, 0, .4)',\n      transform: 'translateY(-2px)',\n    },\n    '&:active': {\n      boxShadow: '0 .5rem 1rem rgba(0, 0, 0, .4)',\n      transform: 'translateY(0)',\n    },\n  },\n  buttonText: {\n    color: 'inherit',\n  },\n  title: {\n    color: cyan[900],\n  },\n};\n\nfunction Popup({\n  classes, triggerPopup, data,\n}) {\n  const { name, description, html_url: htmlUrl } = data || {};\n  return (\n    <Grid container className={classes.popup}>\n      <Grid item container justify=\"flex-end\">\n        <Clear className={classes.close} onClick={triggerPopup} />\n      </Grid>\n      <Grid container direction=\"column\" alignItems=\"center\" justify=\"center\">\n        <Grid item>\n          <Typography className={classes.title} variant=\"h3\">{name}</Typography>\n        </Grid>\n        <Grid item>\n          <Typography variant=\"h5\" className={classes.popupDescription}>{description}</Typography>\n        </Grid>\n        <Grid item>\n          <a\n            className={classes.button}\n            href={htmlUrl}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <Typography className={classes.buttonText} variant=\"h5\">\n              Go to repo →\n            </Typography>\n          </a>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}\n\nPopup.propTypes = {\n  classes: PropTypes.objectOf(PropTypes.string).isRequired,\n  data: PropTypes.shape({\n    name: PropTypes.string,\n    html_url: PropTypes.string,\n    description: PropTypes.string,\n  }),\n  triggerPopup: PropTypes.func,\n};\n\nPopup.defaultProps = {\n  data: null,\n  triggerPopup: null,\n};\n\nexport default injectSheet(styles)(Popup);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport injectSheet from 'react-jss';\n\nconst styles = {\n  overlay: {\n    zIndex: 1,\n    top: 0,\n    left: 0,\n    position: 'fixed',\n    backgroundColor: 'rgba(0, 0, 0, .55)',\n    width: '100%',\n    height: '100%',\n  },\n};\n\nfunction Overlay({ classes, triggerPopup }) {\n  return (\n    <div role=\"presentation\" className={classes.overlay} onClick={triggerPopup} />\n  );\n}\n\nOverlay.propTypes = {\n  classes: PropTypes.objectOf(PropTypes.string).isRequired,\n  triggerPopup: PropTypes.func,\n};\n\nOverlay.defaultProps = {\n  triggerPopup: null,\n};\n\nexport default injectSheet(styles)(Overlay);\n","import React, { Component } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport debounce from 'lodash.debounce';\r\nimport TextInput from './TextInput';\r\nimport DataTable from './DataTable';\r\nimport Popup from './Popup';\r\nimport Overlay from './Overlay';\r\n\r\nconst initialSorting = {\r\n  id: 'asc',\r\n  name: 'asc',\r\n  owner: 'asc',\r\n  stargazers_count: 'asc',\r\n  created_at: 'asc',\r\n};\r\n\r\nclass Panel extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      searchInput: '',\r\n      fetchedData: [],\r\n      isLoading: true,\r\n      sort: {\r\n        ...initialSorting,\r\n      },\r\n      currentSortingParam: '',\r\n      isPopupOpen: false,\r\n      selectedItem: null,\r\n    };\r\n    this.handleChangeInput = this.handleChangeInput.bind(this);\r\n    this.fetchData = debounce(this.fetchData, 500);\r\n    this.handleSort = this.handleSort.bind(this);\r\n    this.triggerPopup = this.triggerPopup.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const cachedQuery = JSON.parse(localStorage.getItem('cachedQuery'));\r\n    const cachedData = JSON.parse(localStorage.getItem('cachedData'));\r\n    if (cachedQuery && cachedData && cachedData.length) {\r\n      this.setState({\r\n        fetchedData: cachedData,\r\n        searchInput: cachedQuery,\r\n        isLoading: false,\r\n      });\r\n    } else {\r\n      this.fetchData('tetris');\r\n    }\r\n  }\r\n\r\n  fetchData(topic) {\r\n    const { searchInput } = this.state;\r\n    if (topic) {\r\n      fetch(`https://api.github.com/search/repositories?q=${topic}`)\r\n        .then((blob) => blob.json())\r\n        .then((data) => {\r\n          this.setState({\r\n            fetchedData: data.items,\r\n            isLoading: false,\r\n          }, () => {\r\n            localStorage.setItem('cachedQuery', JSON.stringify(searchInput));\r\n            localStorage.setItem('cachedData', JSON.stringify(data && data.items));\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          console.error(error);\r\n        });\r\n    } else {\r\n      this.setState({\r\n        isLoading: false,\r\n        fetchedData: [],\r\n        searchInput: '',\r\n      });\r\n    }\r\n  }\r\n\r\n  handleChangeInput(e) {\r\n    e.persist();\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      [name]: value,\r\n      isLoading: true,\r\n    }, this.fetchData(value));\r\n  }\r\n\r\n  handleSort(e) {\r\n    const { fetchedData, sort } = this.state;\r\n    const sortingParam = e.target.value || e.target.parentNode.value;\r\n    const order = sort[sortingParam];\r\n\r\n    function getSortingDecision(firstItem, secondItem) {\r\n      return firstItem > secondItem ? -1 : 1;\r\n    }\r\n\r\n    function compare(prevItem, nextItem) {\r\n      const prev = prevItem[sortingParam];\r\n      const next = nextItem[sortingParam];\r\n      if (order === 'asc') {\r\n        if (sortingParam === 'name') {\r\n          return getSortingDecision(prev, next);\r\n        } if (sortingParam === 'owner') {\r\n          return getSortingDecision(prev.login, next.login);\r\n        } if (sortingParam === 'created_at') {\r\n          return new Date(prev) - new Date(next);\r\n        }\r\n        return prev - next;\r\n      }\r\n      if (sortingParam === 'name') {\r\n        return getSortingDecision(next, prev);\r\n      } if (sortingParam === 'owner') {\r\n        return getSortingDecision(next.login, prev.login);\r\n      } if (sortingParam === 'created_at') {\r\n        return new Date(next) - new Date(prev);\r\n      }\r\n      return next - prev;\r\n    }\r\n    const sortedData = fetchedData.sort(compare);\r\n\r\n    this.setState({\r\n      sort: {\r\n        ...initialSorting,\r\n        [sortingParam]: order === 'asc' ? 'desc' : 'asc',\r\n      },\r\n      fetchedData: sortedData,\r\n      currentSortingParam: sortingParam,\r\n    });\r\n  }\r\n\r\n  triggerPopup(e) {\r\n    const clickedItemIndex = e.target.parentNode.dataset.index;\r\n    this.setState((prevState) => ({\r\n      isPopupOpen: !prevState.isPopupOpen,\r\n      selectedItem: clickedItemIndex,\r\n    }));\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      isPopupOpen, selectedItem, isLoading, fetchedData, searchInput, sort, currentSortingParam,\r\n    } = this.state;\r\n    return (\r\n      <Grid container direction=\"column\" alignItems=\"center\">\r\n        <Grid item>\r\n          <TextInput\r\n            onChangeInput={this.handleChangeInput}\r\n            value={searchInput}\r\n          />\r\n        </Grid>\r\n        <Grid item style={{ marginTop: '2rem' }}>\r\n          <DataTable\r\n            data={fetchedData}\r\n            isLoading={isLoading}\r\n            handleSort={this.handleSort}\r\n            triggerPopup={this.triggerPopup}\r\n            sort={sort}\r\n            currentSortingParam={currentSortingParam}\r\n          />\r\n        </Grid>\r\n        {isPopupOpen && (\r\n          <Popup triggerPopup={this.triggerPopup} data={fetchedData[selectedItem]} />\r\n        )}\r\n        {isPopupOpen && <Overlay triggerPopup={this.triggerPopup} />}\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Panel;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport injectSheet from 'react-jss';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = {\n  header: {\n    paddingTop: '3rem',\n    paddingBottom: '6rem',\n    textAlign: 'center',\n  },\n  link: {\n    cursor: 'pointer',\n    textDecoration: 'none',\n    transition: 'transform .3s ease-out',\n    display: 'inline-block',\n    '&:hover': {\n      transform: 'skewY(3deg) skewX(15deg) scale(1.1)',\n    },\n  },\n  title: {\n    color: '#ffff',\n  },\n  '@media (max-width: 640px)': {\n    header: {\n      fontSize: '4rem',\n    },\n  },\n\n};\n\nfunction Header({ classes, title }) {\n  return (\n    <div className={classes.header}>\n      <a className={classes.link} href=\"https://github.com\" rel=\"noopener noreferrer\" target=\"_blank\">\n        <Typography className={classes.title} variant=\"h1\">{title}</Typography>\n      </a>\n    </div>\n  );\n}\n\nHeader.propTypes = {\n  classes: PropTypes.objectOf(PropTypes.string).isRequired,\n  title: PropTypes.string,\n};\n\nHeader.defaultProps = {\n  title: null,\n};\n\nexport default injectSheet(styles)(Header);\n","import React from 'react';\nimport injectSheet from 'react-jss';\nimport Grid from '@material-ui/core/Grid';\nimport cyan from '@material-ui/core/colors/cyan';\nimport Panel from './components/Panel';\nimport Header from './components/Header';\n\nconst styles = {\n  '@global': {\n    '*:root': {\n      margin: 0,\n      padding: 0,\n      boxSizing: 'border-box',\n      fontSize: '62.5%',\n      backgroundColor: cyan[900],\n    },\n    body: {\n      margin: 0,\n      padding: 0,\n    },\n  },\n};\n\nconst App = () => (\n  <Grid container justify=\"center\" direction=\"column\">\n    <Grid item><Header title=\"Github Repository Searcher\" /></Grid>\n    <Grid item><Panel /></Grid>\n  </Grid>\n\n);\n\nexport default injectSheet(styles)(App);\n","/* eslint-disable */\r\n// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost'\r\n    // [::1] is the IPv6 localhost address.\r\n    || window.location.hostname === '[::1]'\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    || window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\r\n    ),\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service '\r\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all '\r\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404\r\n        || (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.',\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then((registration) => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}